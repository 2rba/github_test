name: 'Staging deploy'
on:
  status:
    branches:
      - staging_candidate
jobs:
  deploy:
    name: 'Staging deploy'
    if: ${{ contains(github.event.branches.*.name, 'staging_candidate') && (github.event.state == 'success' || github.event.state == 'failure') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          ref=`gh api repos/${{ github.repository }}/git/refs/heads/staging_candidate -q '.object.sha'`
          echo '---------------------------------------------------------------------'
          echo "#${{ toJson(github.repository) }}"
          echo $ref
          echo "#${{ toJson(github.event.commit.commit.tree.sha) }}"
          echo '---------------------------------------------------------------------'
          echo "#${{ toJson(github) }}"
          set -x
          prs=`gh api 'https://api.github.com/search/issues?q=repo:${{ github.repository }}+label:"staging+candidate"' -q '.items[]|[.url, .user.login]|@tsv'`
          if [ -z "${prs}" ];
          then
            exit 0
          fi
          if [ "${{github.event.state}}" == "success" ]; then
           echo "$prs" | while IFS=$'\t' read -r url login
            do
              echo '{"labels":["Staging"]}' | gh api $url/labels --input -
              gh api -X DELETE $url/labels/staging\ candidate
            done

           git remote set-branches origin staging_candidate
           git fetch
           git checkout staging_candidate
           git push -f origin origin/staging_candidate:staging1
          else
           echo "$prs" | while IFS=$'\t' read -r url login
            do
              gh api $url/comments -f "body=@$login staging_candidate branch failed CI"
            done
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
