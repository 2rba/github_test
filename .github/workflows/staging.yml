name: OnComment
on:
  issue_comment:
    types: [created]
jobs:
  build:
    name: 'Merge'
    if: ${{ github.event.comment.body == '/staging' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100
#          echo "Comment on #${{ github.event.issue.pull_request.url }} PR #${{ toJson(github) }}"
      - run: |
          set -xe
          new_branch=`gh api ${{ github.event.issue.pull_request.url }} --jq '.head.ref'`
          status_check=`gh api ${{ github.event.issue.repository_url }}/commits/$new_branch/status --jq '.state'`
          if [ "$status_check" != "success" ]; then
            gh api ${{ github.event.comment.reactions.url }} -f 'content=confused'
            exit 1
          fi
          branches=`gh pr list -l staging | cut -d $'\t' -f 3 | sed "s/^/origin\//" | tr '\n' ' '`
          candite_branches=`gh pr list -l 'staging candidate' | cut -d $'\t' -f 3 | sed "s/^/origin\//" | tr '\n' ' '`
          git fetch
          git config --global user.email "staging@indeedflex.com"
          git config --global user.name "Staging Candidate Action"
          git checkout -b staging_candidate
          set +e
          merge_successful=`git merge --no-edit $branches $candite_branches origin/$new_branch`
          set -e
          if [ -n "${merge_successful}" ];
          then
            echo '{"labels":["staging candidate"]}' | gh api ${{ github.event.issue.url }}/labels --input -
            gh api ${{ github.event.comment.reactions.url }} -f 'content=rocket'
            git push -f --set-upstream origin staging_candidate
          else
            gh api ${{ github.event.comment.reactions.url }} -f 'content=-1'
          fi

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: Setup tmate session
#        uses: mxschmitt/action-tmate@v3
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
